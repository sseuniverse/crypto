name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  discussions: write
  pull-requests: write

# jobs:
#   create_release:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write
#       discussions: write

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Create Release
#         id: create_release
#         uses: softprops/action-gh-release@v2
#         if: startsWith(github.ref, 'refs/tags/')
#         with:
#           name: ${{ github.ref_name }}
#           tag_name: ${{ github.ref_name }}
#           generate_release_notes: true
#           body: |
#             ## What's New

#             * Add release notes here.  Use markdown for formatting.
#             * You can use the commit messages since the last tag.

#       - name: Generate Changelog
#         id: changelog
#         if: startsWith(github.ref, 'refs/tags/')
#         run: |
#           echo "::set-output name=changelog::$(git log --pretty=format:'* %s' $(git describe --tags --abbrev=0)...${{ github.ref_name }})"

jobs:
  changelog:
    name: Changelog
    runs-on: ubuntu-latest

    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}

    env:
      PR_BRANCH: release-ci-${{ github.sha }}

      steps:
        - uses: actions/checkout@v4
        - name: Create Branch
          run: |
            git checkout -b ${{ env.PR_BRANCH }}

        - name: Create Changelog
          uses: TriPSs/conventional-changelog-action@v6
          id: changelog
          with:
            github-token: ${{ github.token }}
            git-user-name: "github-actions[bot]"
            git-user-email: "github-actions[bot]@users.noreply.github.com"
            git-branch: ${{ env.PR_BRANCH }}
            skip-git-pull: true
            output-file: false
            version-file: .github/package.yaml
            create-summary: true

        - name: Create Changelog PR
          if: steps.changelog.outputs.skipped == 'false'
          run: |
            gh pr create --base main --head ${{ env.PR_BRANCH }} --title 'chore(release): ${{ steps.changelog.outputs.tag }} [skip-ci]' --body '${{ steps.changelog.outputs.clean_changelog }}'
          env:
            GH_TOKEN: ${{ github.token }}

        - name: Approve Changelog PR
          if: steps.changelog.outputs.skipped == 'false'
          run: |
            gh pr review --approve ${{ env.PR_BRANCH }}
          env:
            GH_TOKEN: ${{ secrets.GH_OWNER_TOKEN }}

        - name: Merge Changelog PR
          if: steps.changelog.outputs.skipped == 'false'
          run: |
            gh pr merge --squash --auto --delete-branch ${{ env.PR_BRANCH }}
          env:
            GH_TOKEN: ${{ secrets.GH_OWNER_TOKEN }}

  release:
    name: Release
    needs: changelog
    if: needs.changelog.outputs.skipped == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Release
        uses: softprops/action-gh-release
        with:
          token: ${{ secrets.GH_OWNER_TOKEN }}
          tag_name: ${{ needs.changelog.outputs.tag }}
          prerelease: false
          draft: false
          files: bin/*
          generate_release_notes: true
          name: ${{ needs.changelog.outputs.tag }}
          body: |
            <details>
              <summary>ðŸ¤– Autogenerated Conventional Changelog</summary>

            ${{ needs.changelog.outputs.clean_changelog }}
            </details>
